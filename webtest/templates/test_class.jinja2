import unittest
from webtest import record
class TestWebUnitGen_{{ hst }}(unittest.TestCase):
{% for test in tlist %}
    def {{ test[0] }}_on_{{ hst }}(self):
        r = record.WebtestRecord("{{ test[1] }}", "{{ host }}")
        res = r.test()
        # no headers missing from the new response
        self.assertSetEqual(res[0], set([]))
        # no headers added to the new response
        self.assertSetEqual(res[1], set([]))
        diff = {}
        for k,v in res[2].iteritems():
            new_v = res[3][k]
            if new_v != v:
               if k in r.fuzzy_headers:
                   iv = int(v)
                   inv = int(new_v)
                   reldiff = (inv - iv)*(inv - iv)
                   if reldiff > inv*inv*0.0004:
                      diff[k] = (v, new_v)
               else:
                   diff[k] = (v, new_v)
        print(diff)
        self.assertDictEqual(diff, {})

{% endfor %}
